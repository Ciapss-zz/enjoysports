@using Microsoft.AspNet.Identity
@model TeamSports.ViewModels.EventsUserViewModel

@{
    ViewBag.Title = "Details";
    bool alreadyJoined = true;
}

<h2>Details of event</h2>

<div>
    <hr />
    <div class="col-lg-4">
        <dl class="dl-horizontal">
            @Html.HiddenFor(model => model.Event.GeoLat, htmlAttributes: new { @id = "GeoLat" })
            @Html.HiddenFor(model => model.Event.GeoLng, htmlAttributes: new { @id = "GeoLng" })
            <dt>
                @Html.DisplayNameFor(model => model.Event.Level.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Event.Level.Name)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Event.Sport.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Event.Sport.Name)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Event.Description)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Event.Description)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Event.City.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Event.City.Name)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Event.AvailableSlots)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Event.AvailableSlots)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Event.MaxSlots)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Event.MaxSlots)
            </dd>
        </dl>
        <p><strong>Participants:</strong></p>
        @foreach (var item in Model.Event.Users)
        {
            <p>@item.User.UserName</p>
        }
    </div>
    <div class="event col-lg-2">
        @foreach (var item in Model.Event.Users)
        {
            if (item.User.Id == User.Identity.GetUserId())
            {
                alreadyJoined = false;
            }
        }

        @if (Model.Event.Owner != User.Identity.GetUserId())
        {
            if (alreadyJoined)
            {
                @Html.ActionLink("Join", "Join", new { id = Model.Event.ID }, new { @class = "btn-join" })
            }
            else
            {
                @Html.ActionLink("Leave", "Leave", new { id = Model.Event.ID }, new { @class = "btn-leave" })
            }
        }
    </div>
    <div class="col-lg-6">
        <div id="map"></div>
    </div>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Event.ID }) |
    @Html.ActionLink("Back to List", "Index")
</p>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")
}
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCWvt7VexVLI3rF_q8gfQf-oetKVa9BsjQ&callback=initMap"
        async defer></script>
